
Examples_train
Target: tensor([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 1], device='cuda:0')
 Predicted: tensor([0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 1], device='cuda:0')

Examples_val
Target: tensor([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
 Predicted: tensor([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')

Examples_test
Target: tensor([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
 Predicted: tensor([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')

Examples_train

 Output: tensor([[  9.5793, -10.1050],
        [ -5.4817,   6.2177],
        [ -4.1233,   4.7266],
        [ 10.4872, -11.1145],
        [  8.1419,  -8.6295],
        [ -2.0797,   2.4985],
        [ -3.3897,   3.8770],
        [  7.5227,  -7.9127],
        [  6.4667,  -6.8641],
        [  3.9210,  -4.1456],
        [  5.6826,  -5.9150],
        [  7.7658,  -8.1437],
        [  9.9981, -10.6464],
        [ 12.5466, -13.1952],
        [ -4.1058,   4.7889],
        [  9.4823, -10.0933],
        [ 10.6115, -11.2907],
        [  6.0364,  -6.3289],
        [  7.0609,  -7.4175],
        [  6.6474,  -7.0586],
        [  3.6354,  -3.8101],
        [  8.8897,  -9.6405],
        [  6.1212,  -6.3209],
        [ 12.2617, -12.7814],
        [ -4.2262,   4.8462],
        [  8.6427,  -9.2765],
        [  7.7198,  -8.1610],
        [  9.9074, -10.4571],
        [  4.8754,  -5.0501],
        [ 10.3165, -10.9615],
        [ 10.2557, -10.9518],
        [ -6.2554,   7.1740]], device='cuda:0')

Examples_val

 Output: tensor([[  5.4444,  -5.7914],
        [ 15.5891, -16.6119],
        [  5.6110,  -5.7363],
        [ 11.3340, -12.0484],
        [ -2.7465,   3.1681],
        [ 11.3417, -12.1495],
        [  2.7074,  -2.8877],
        [  7.6577,  -7.8981],
        [  7.9976,  -8.3951],
        [  2.4981,  -2.5360],
        [  4.2130,  -4.3987],
        [  3.2534,  -3.3428],
        [  8.1375,  -8.6341],
        [  7.0747,  -7.6102],
        [  4.6234,  -4.9191],
        [ 10.4786, -11.1902],
        [ 13.2956, -14.1523],
        [ 12.9000, -13.9213],
        [  7.3623,  -7.7839],
        [ 10.3865, -11.0987],
        [ 10.7625, -11.2996],
        [ 11.5393, -12.2675],
        [ -3.9503,   4.5283],
        [ 12.1414, -12.9443],
        [ 15.0258, -16.0113],
        [ 10.8947, -11.5844],
        [  7.1930,  -7.4050],
        [  2.3527,  -2.4497],
        [  9.7141, -10.1879],
        [  7.7062,  -8.2271],
        [  6.4929,  -6.8759],
        [  8.0279,  -8.2995]], device='cuda:0')

Examples_test

 Output: tensor([[ -4.6652,   5.3878],
        [  4.9365,  -5.2067],
        [  6.3220,  -6.6864],
        [  9.9239, -10.4568],
        [  9.5238, -10.2844],
        [  3.1689,  -3.2541],
        [  9.2325,  -9.6500],
        [ 14.0951, -14.9296],
        [ 12.3138, -13.0476],
        [  3.8392,  -4.0473],
        [  8.5410,  -9.0650],
        [ -5.2303,   5.9875],
        [  8.0846,  -8.4620],
        [  5.0938,  -5.3879],
        [ -1.4347,   1.6945],
        [ 11.7205, -12.5094],
        [  3.0576,  -3.1674],
        [  9.4923, -10.1067],
        [ -8.0668,   9.2126],
        [  6.5073,  -6.8839],
        [  7.0746,  -7.5205],
        [  6.0940,  -6.4246],
        [ -5.6335,   6.3793],
        [ 10.6934, -11.4035],
        [  1.0557,  -1.0241],
        [  3.1512,  -3.2709],
        [ 11.8117, -12.6785],
        [  4.4923,  -4.7137],
        [  8.5754,  -9.1719],
        [  7.3833,  -7.7256],
        [  6.0173,  -6.4048],
        [  4.9038,  -4.8822]], device='cuda:0')
