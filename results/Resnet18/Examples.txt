
Examples_train
Target: tensor([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 1, 0, 0], device='cuda:0')
 Predicted: tensor([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 1, 0, 0], device='cuda:0')

Examples_val
Target: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 1, 0, 0, 1, 0, 0], device='cuda:0')
 Predicted: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
        0, 0, 1, 0, 0, 1, 0, 0], device='cuda:0')

Examples_test
Target: tensor([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')
 Predicted: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
        0, 0, 0, 0, 1, 0, 0, 0], device='cuda:0')

Examples_train

 Output: tensor([[  7.9580,  -8.7059],
        [ 12.1441, -13.4530],
        [ 10.4193, -11.5466],
        [  7.6551,  -8.4713],
        [ -2.3367,   2.2643],
        [ -2.9143,   2.8273],
        [  3.5302,  -3.8017],
        [  6.2183,  -6.8072],
        [  5.6376,  -5.9472],
        [  4.9327,  -5.2984],
        [ -3.2729,   3.3018],
        [  9.3272, -10.1531],
        [  2.6896,  -2.8675],
        [  4.9802,  -5.3522],
        [ -2.7923,   2.7851],
        [ -2.0456,   2.0547],
        [  0.5021,  -0.6631],
        [  2.6543,  -2.8930],
        [  4.2163,  -4.5095],
        [  3.8451,  -4.1390],
        [  4.0800,  -4.3859],
        [  5.6616,  -6.3073],
        [ 11.9446, -13.3174],
        [  2.2979,  -2.4972],
        [  1.9192,  -2.1670],
        [  5.9995,  -6.5819],
        [ -2.5680,   2.4859],
        [  2.6850,  -2.8618],
        [  3.3849,  -3.5272],
        [ -2.9871,   2.9779],
        [  6.6899,  -7.3695],
        [  8.1389,  -8.7288]], device='cuda:0')

Examples_val

 Output: tensor([[  4.5698,  -5.1839],
        [  5.5031,  -5.9182],
        [  3.7168,  -4.0885],
        [ 11.4169, -12.6381],
        [  5.6816,  -6.3452],
        [  4.4595,  -4.9773],
        [  6.9539,  -7.5273],
        [  2.0379,  -2.1504],
        [  5.7843,  -6.2932],
        [  7.1296,  -7.9623],
        [  7.0402,  -7.6918],
        [  0.4746,  -0.6431],
        [ -1.8352,   1.7576],
        [ -1.1667,   1.0408],
        [  2.5716,  -2.7825],
        [  4.1246,  -4.4037],
        [ 16.8070, -18.6215],
        [  3.3798,  -3.6739],
        [  8.7247,  -9.5567],
        [  9.7728, -10.6913],
        [ -1.6231,   1.5240],
        [  3.7162,  -3.9007],
        [  1.2151,  -1.3743],
        [  7.8672,  -8.5097],
        [  5.4236,  -5.8108],
        [  4.9640,  -5.3536],
        [ -1.3637,   1.2359],
        [  6.4786,  -7.1312],
        [  3.5619,  -3.8788],
        [ -2.4292,   2.3142],
        [  5.6962,  -6.2851],
        [  1.1305,  -1.3397]], device='cuda:0')

Examples_test

 Output: tensor([[  0.4280,  -0.5420],
        [  2.9004,  -3.2701],
        [  8.8825,  -9.7490],
        [  2.7716,  -3.1036],
        [  1.8549,  -2.0501],
        [  5.8956,  -6.4450],
        [  8.8572,  -9.6874],
        [  7.5882,  -8.3243],
        [  3.9157,  -4.4305],
        [  1.3357,  -1.5007],
        [ 10.4023, -11.3754],
        [ -3.7062,   3.6394],
        [  3.7339,  -4.1459],
        [  3.9874,  -4.2472],
        [ -2.3907,   2.3096],
        [  3.4922,  -3.7709],
        [  4.7078,  -5.0948],
        [  6.9689,  -7.6277],
        [ -2.1100,   2.0422],
        [  2.9984,  -3.2114],
        [  9.1746, -10.0171],
        [  8.9464,  -9.9348],
        [ -3.0956,   3.0920],
        [  9.3038, -10.2342],
        [  2.7788,  -3.0239],
        [  4.0045,  -4.1208],
        [  1.8912,  -2.1111],
        [  2.5069,  -2.6775],
        [ -0.0780,  -0.0609],
        [ 10.5277, -11.7093],
        [  3.1616,  -3.4405],
        [  2.5152,  -2.7947]], device='cuda:0')
